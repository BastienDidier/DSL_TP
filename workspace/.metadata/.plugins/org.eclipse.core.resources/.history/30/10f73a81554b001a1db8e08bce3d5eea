/*
 * generated by Xtext 2.14.0
 */
package fr.ut2j.m1ice.fsm.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import fr.ut2j.m1ice.fsm.FSM
import org.eclipse.emf.common.util.EList
import fr.ut2j.m1ice.fsm.State
import fr.ut2j.m1ice.fsm.Transition

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class TextEditorGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		var fsm = resource.contents.get(0) as FSM
		var listState = fsm.state;
		var listTransaction = fsm.transition;
		fsa.generateFile("Etat.java",generateStateInterface());
		fsa.generateFile("EtatOn.java",generateStateOn());
		fsa.generateFile("EtatOff.java",generateStateOff());
		fsa.generateFile("EtatFinal.java",generateStateFinal());
		fsa.generateFile("Transaction.java",generateTransition());
		fsa.generateFile("FSM.java",generateFSM(listState,listTransaction));

	}
	
	def generateStateInterface()
	{
		var str="
				public interface Etat {
				    String name = '';
				    public String display();
				
				}
				";
		return str;
	}
	
	def generateStateOn()
	{
		var str="
public class EtatOn implements Etat{
    String name;
    public EtatOn(String name)
    {
        this.name = name;
    }
    public String display()
    {
       return  this.name+' Etat On';
    }
}";
		return str;
	}
	
	def generateStateOff()
	{
		var str="
public class EtatOff implements Etat{
    String name;
    public EtatOn(String name)
    {
        this.name = name;
    }
    public String display()
    {
       return  this.name+' Etat Off';
    }
}";
		return str;
	}
	
	def generateStateFinal()
	{
		var str="
public class EtatFinal implements Etat{

    @Override
    public String display() {
        return 'Etat Final';
    }
}";
		return str;
	}
	
	def generateTransition()
	{
		var str="
public class Transaction {
    Etat s1;
    Etat s2;

    public Transaction(Etat OldEtat, Etat NewEtat)
    {
        this.s1 = OldEtat;
        this.s2 = NewEtat;
    }

    public String display()
    {
        return this.s1.name+' => '+this.s2.name;
    }
}
				";
		return str;
	}
	def generateFSM(EList<State> listState,EList<Transition> listeTransition){
		var str="import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
public class FSM {

    Etat currentState;
    List<Transaction> listTransaction;

    public FSM ()
    {
        this.currentState = new EtatOn('initial');
        this.listTransaction = new ArrayList<Transaction>();
    }

    public static void main(String[] args) {
	// write your code here
        FSM fsm = new FSM();
";
for(var i=0; i<listState.length;i++)
{
	var classe="";
	if(listState.get(i).class.equals("StateOn"))
	{
		classe="EtatOn";
	}
	else if(listState.get(i).class.equals("StateOff"))
	{
		classe="EtatOff"
	}
	str+="Etat "+listState.get(i).name+" = new "+classe
}

       
		return str;
	}
}
